name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lumen-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
        ports:
          - "3306:3306"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: pdo, pdo_mysql
          tools: composer

      - name: Install Lumen dependencies
        run: |
          cd backend/lumen-api
          composer install
          cp .env.example .env
          php artisan cache:clear

      - name: Get MySQL IP
        run: |
          MYSQL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q --filter "ancestor=mysql:8"))
          echo "MySQL est accessible à : $MYSQL_IP"
          echo "DB_HOST=$MYSQL_IP" >> backend/lumen-api/.env

      - name: Wait for MySQL container
        run: |
          for i in {1..20}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "✅ MySQL is ready!"
              exit 0
            fi
            echo "⏳ MySQL is not ready yet... Attempt $i"
            sleep 5
          done
          echo "❌ MySQL does not respond after many attempts."
          exit 1

      - name: Run Lumen migrations
        run: |
          cd backend/lumen-api
          chmod +x artisan
          php artisan migrate
          php artisan db:seed

      - name: Generate JWT Secret
        run: |
          cd backend/lumen-api
          php artisan jwt:secret

      - name: Run Lumen tests
        run: |
          cd backend/lumen-api
          composer test

  node-tests:
    runs-on: ubuntu-latest
    needs: lumen-tests
    services:
      redis:
        image: redis:latest
        ports:
          - "6379:6379"
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
        ports:
          - "3306:3306"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: pdo, pdo_mysql
          tools: composer

      - name: Install dependencies
        run: |
          cd backend/node-api
          npm install

      - name: Wait for Redis
        run: |
          for i in {1..10}; do
            if nc -z localhost 6379; then
              echo "✅ Redis is ready!"
              exit 0
            fi
            echo "⏳ Waiting for Redis..."
            sleep 2
          done
          echo "❌ Redis did not start in time."
          exit 1

      - name: Set environment for GitHub Actions
        run: |
          echo "LUMEN_API_URL=http://127.0.0.1:8000" >> $GITHUB_ENV
          echo "APP_ENV=ci" >> $GITHUB_ENV

      - name: Install Lumen dependencies
        run: |
          cd backend/lumen-api
          composer install --no-dev --prefer-dist
          cp .env.example .env
          php artisan cache:clear

      - name: Get MySQL IP
        run: |
          MYSQL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q --filter "ancestor=mysql:8"))
          echo "MySQL est accessible à : $MYSQL_IP"
          echo "DB_HOST=$MYSQL_IP" >> backend/lumen-api/.env

      - name: Wait for MySQL container
        run: |
          for i in {1..20}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "✅ MySQL is ready!"
              exit 0
            fi
            echo "⏳ MySQL is not ready yet... Attempt $i"
            sleep 5
          done
          echo "❌ MySQL does not respond after many attempts."
          exit 1

      - name: Start Lumen as a service
        run: |
          cd backend/lumen-api
          nohup php -S 127.0.0.1:8000 -t public > lumen.log 2>&1 &

      - name: Run Lumen migrations
        run: |
          cd backend/lumen-api
          chmod +x artisan
          php artisan migrate
          php artisan db:seed

      - name: Generate JWT Secret
        run: |
          cd backend/lumen-api
          php artisan jwt:secret

      - name: Run Node.js tests
        run: |
          cd backend/node-api
          npm test
